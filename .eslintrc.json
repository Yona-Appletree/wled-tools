{
  "extends": "next/core-web-vitals",
  "rules": {
    "react/no-unescaped-entities": 0,
    "getter-return": "error",
    // ts(2378)
    "no-const-assign": "error",
    // ts(2588)
    "no-dupe-args": "error",
    // ts(2300)
    "no-dupe-class-members": "error",
    // ts(2393) & ts(2300)
    "no-dupe-keys": "error",
    // ts(1117)
    "no-func-assign": "error",
    // ts(2539)
    "no-import-assign": "error",
    // ts(2539) & ts(2540)
    "no-new-symbol": "error",
    // ts(2588)
    "no-obj-calls": "error",
    // ts(2349)
    "no-redeclare": "error",
    // ts(2451)
    "no-setter-return": "error",
    // ts(2408)
    "no-this-before-super": "error",
    // ts(2376)
    "no-undef": "error",
    // ts(2304)
    "no-unreachable": "warn",
    // ts(7027)
    "no-unsafe-negation": "error",
    // ts(2365) & ts(2360) & ts(2358)
    "no-var": "error",
    // ts transpiles let/const to var, so no need for vars any more
    "prefer-const": "error",
    // ts provides better types with const
    "prefer-rest-params": "error",
    // ts provides better types with rest args over arguments
    "prefer-spread": "error",
    // ts transpiles spread to apply, so no need for manual apply
    "valid-typeof": "off",
    // ts(2367)
    "no-implicit-coercion": "error",
    "quotes": "error",
    "semi": "error",
    "eqeqeq": "error",
    "quote-props": ["error", "consistent-as-needed", { "keywords": true }],
    "comma-dangle": ["error", "only-multiline"]
  }
}
